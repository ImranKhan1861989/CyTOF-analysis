import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# Load CyTOF data
# Assume 'cytof_data.csv' is the file containing CyTOF data
data = pd.read_csv('cytof_data.csv')

# Preprocessing: Standardize the data
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)

# Dimensionality Reduction using PCA
pca = PCA(n_components=2)
pca_result = pca.fit_transform(data_scaled)

# Dimensionality Reduction using t-SNE
tsne = TSNE(n_components=2, perplexity=30, n_iter=300)
tsne_result = tsne.fit_transform(data_scaled)

# Clustering (e.g., KMeans)
from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=5)
clusters = kmeans.fit_predict(data_scaled)

# Visualization
plt.figure(figsize=(16, 7))

# PCA Plot
plt.subplot(1, 2, 1)
sns.scatterplot(x=pca_result[:, 0], y=pca_result[:, 1], hue=clusters, palette='viridis')
plt.title('PCA of CyTOF Data')
plt.xlabel('PCA1')
plt.ylabel('PCA2')

# t-SNE Plot
plt.subplot(1, 2, 2)
sns.scatterplot(x=tsne_result[:, 0], y=tsne_result[:, 1], hue=clusters, palette='viridis')
plt.title('t-SNE of CyTOF Data')
plt.xlabel('t-SNE1')
plt.ylabel('t-SNE2')

plt.show()
